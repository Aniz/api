=begin
#directus.io

#API for directus.io

OpenAPI spec version: 1.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for DirectusSDK::BookmarksApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BookmarksApi' do
  before do
    # run before each test
    @instance = DirectusSDK::BookmarksApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BookmarksApi' do
    it 'should create an instance of BookmarksApi' do
      expect(@instance).to be_instance_of(DirectusSDK::BookmarksApi)
    end
  end

  # unit tests for add_bookmark
  # Create a column in a given table
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :user [Directus user id] This assigns the bookmark to a specific user (there&#39;s a ticket to allow for \&quot;global\&quot; bookmarks using NULL) (Only using local connection)
  # @option opts [String] :title The text to display in the navigation menu
  # @option opts [String] :url The path to navigate to when clicked, relative to the Directus root
  # @option opts [String] :icon_class Deprecated
  # @option opts [String] :active Deprecated
  # @option opts [String] :section [\&quot;search\&quot; or \&quot;other\&quot;] Which nav section to show the link within. User generated bookmarks use \&quot;search\&quot;, while all system links go within \&quot;other\&quot;
  # @return [nil]
  describe 'add_bookmark test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_bookmark
  # Deletes specific bookmark
  # 
  # @param bookmark_id ID of table to return rows from
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_bookmark test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_bookmark
  # Returns specific bookmark
  # 
  # @param bookmark_id ID of table to return rows from
  # @param [Hash] opts the optional parameters
  # @return [GetBookmark]
  describe 'get_bookmark test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_bookmarks
  # Returns bookmarks
  # 
  # @param [Hash] opts the optional parameters
  # @return [GetBookmarks]
  describe 'get_bookmarks test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_bookmarks_self
  # Returns bookmarks of current user
  # 
  # @param [Hash] opts the optional parameters
  # @return [GetBookmarks]
  describe 'get_bookmarks_self test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
