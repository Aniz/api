=begin
#directus.io

#API for directus.io

OpenAPI spec version: 1.1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for DirectusSDK::FilesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'FilesApi' do
  before do
    # run before each test
    @instance = DirectusSDK::FilesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FilesApi' do
    it 'should create an instance of FilesApi' do
      expect(@instance).to be_instance_of(DirectusSDK::FilesApi)
    end
  end

  # unit tests for create_file
  # Creates file
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :data The file&#39;s Base64 content
  # @option opts [Integer] :active The file&#39;s status, default options are: 1 (active), 2 (inactive), 0 (deleted)
  # @option opts [String] :name The name used in the filesystem, including the extension, eg: \&quot;my-file.jpg\&quot;. This is generated by the system based on Global Settings
  # @option opts [String] :title The file&#39;s title
  # @option opts [String] :location Location of where the picture was taken, if any. Pulled from the IPTC location when available
  # @option opts [String] :type The file&#39;s mime type
  # @option opts [String] :tags A CSV of tags for this file. Pulled from the IPTC keywords when available
  # @option opts [String] :caption The file&#39;s caption or description. Pulled from the IPTC description when available
  # @return [nil]
  describe 'create_file test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_file
  # Returns specific file by id
  # 
  # @param file_id ID of file to get
  # @param [Hash] opts the optional parameters
  # @return [GetFile]
  describe 'get_file test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_files
  # Returns files
  # 
  # @param [Hash] opts the optional parameters
  # @return [GetFiles]
  describe 'get_files test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_file
  # Creates file
  # 
  # @param file_id ID of file to get
  # @param [Hash] opts the optional parameters
  # @option opts [String] :data The file&#39;s Base64 content
  # @option opts [Integer] :active The file&#39;s status, default options are: 1 (active), 2 (inactive), 0 (deleted)
  # @option opts [String] :name The name used in the filesystem, including the extension, eg: \&quot;my-file.jpg\&quot;. This is generated by the system based on Global Settings
  # @option opts [String] :title The file&#39;s title
  # @option opts [String] :location Location of where the picture was taken, if any. Pulled from the IPTC location when available
  # @option opts [String] :type The file&#39;s mime type
  # @option opts [String] :tags A CSV of tags for this file. Pulled from the IPTC keywords when available
  # @option opts [String] :caption The file&#39;s caption or description. Pulled from the IPTC description when available
  # @option opts [String] :url File url relativity to Directus base url
  # @option opts [Integer] :width File width
  # @option opts [Integer] :height File height
  # @option opts [Integer] :size File size in bytes
  # @option opts [String] :embed_id ID of the embedded file. Ex Youtube ID
  # @option opts [Integer] :user File owner (who uploaded the file)
  # @option opts [String] :date_uploaded File uploaded date. TODO It should be an DateTime object
  # @option opts [String] :storage_adapter Storage adapter used to upload the file
  # @return [nil]
  describe 'update_file test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
